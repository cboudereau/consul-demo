
receivers:
  # client log parsing
  filelog/client:
    include: [ /app/log/*.log ]
    storage: file_storage/client
    attributes:
      service.name: client
      application: client
      host: ${env:HOSTNAME}
    operators:
      - type: key_value_parser
        delimiter: "="
        pair_delimiter: "\t"
        # send or drop pattern. Prefer drop with a dead letter queue (filter agent log with action="drop" and dedicated field to monitor dlq)
        on_error: drop
        timestamp:
          parse_from: attributes.timestamp
          layout_type: gotime
          layout: '2006/01/02 15:04:05.999999999'

processors:
  batch/app:
  attributes/app/loki:
    actions:
      - action: insert
        key: loki.attribute.labels
        value: H, host, application, service.name, service.namespace, kind, name
  attributes/app:
    actions:
      - action: insert
        key: service.namespace
        value: otelcontribcol-app

service:
  pipelines:
    logs/client:
      receivers: [filelog/client]
      processors: [batch/app, attributes/app, attributes/app/loki]
      # exporters: [logging, loki]
      exporters: [loki]
